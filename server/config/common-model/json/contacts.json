{
  "CONTACTS": {
    "CONTACTS_PAGGING_COUNT_GET": {
      "PARAMS": [
        {
          "TYPE": "number",
          "KEY": "user_id"
        },
        {
          "TYPE": "filter",
          "KEY": "filters",
          "FILTER_PREFIX": " AND "
        }
      ],
      "SQL": "select count(*) as count from contacts inner join fos_user on fos_user.id = contacts.friend_id where user_id =  ? #filters#;",
      "RESULT": "SINGLE"
    },
    "CONTACTS_PAGGING_GET": {
      "PARAMS": [
        {
          "TYPE": "number",
          "KEY": "user_id"
        },
        {
          "TYPE": "filter",
          "KEY": "filters",
          "FILTER_PREFIX": " AND "
        },
        {
          "TYPE": "sort",
          "KEY": "sort_by"
        },
        {
          "TYPE": "sort",
          "KEY": "sort_order"
        },
        {
          "TYPE": "number",
          "KEY": "page_size"
        },
        {
          "TYPE": "number",
          "KEY": "page_offset"
        }
      ],
      "SQL": "select fos_user.*, chat_user_status.user_status as chat_user_status, chat.id as chat_id from contacts left join chat on (chat.user_id = contacts.user_id AND chat.friend_id = contacts.friend_id) OR (chat.user_id = contacts.friend_id AND chat.friend_id = contacts.user_id) left join chat_user_status on chat_user_status.user_id = contacts.friend_id inner join fos_user on fos_user.id = contacts.friend_id where contacts.user_id = ? #filters# ORDER BY #sort_by# #sort_order# LIMIT ? OFFSET ?"
    },
    "CONTACTS_SEARCH_GET": {
      "PARAMS": [
        {
          "TYPE": "number",
          "KEY": "user_id"
        },
        {
          "TYPE": "string",
          "KEY": "username"
        },
        {
          "TYPE": "string",
          "KEY": "username"
        },
        {
          "TYPE": "string",
          "KEY": "username"
        }
      ],
      "SQL": "select fos_user.*, chat.id as chat_id from contacts left join chat on (chat.user_id = contacts.user_id AND chat.friend_id = contacts.friend_id) OR (chat.user_id = contacts.friend_id AND chat.friend_id = contacts.user_id) inner join fos_user on fos_user.id = contacts.friend_id where contacts.user_id = ? and (first_name like ? OR last_name like ? OR username like ?)"
    },
    "CONTACTS_GET_ALL_IN_NOT_CHAT": {
      "PARAMS": [],
      "SQL": "select * from contacts",
      "VALIDATION": "NOT_EXISTS",
      "ERROR_CODE": "DATA_NOT_FOUND"
    }
  }
}